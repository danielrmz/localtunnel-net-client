<?xml version="1.0" encoding="utf-8"?>
<topic id="fee6a616-6282-4419-a517-7c33c56158ee" revisionNumber="1">
  <developerOrientationDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      The library supports differnet method to connect to SSH server.
      It also has support to add a custom authentication method if needed. Method supported out of the box are :<newTerm>publickey</newTerm>, <newTerm>password</newTerm> and <newTerm>keyboard-interactive</newTerm>. There is also support for different events that can occure during authentication. For example: server can send an information that need to be presented to the user upon login, user's password is expired and new password could be provided to change user's password and others scenrios.
      
      By using <codeEntityReference>T:Renci.SshClient.ConnectionInfo</codeEntityReference> you can specify connection timeout, which in this case will wait 30 seconds while tying to connect to the server after which it will throw an exception if it did not connect.
           
    </introduction>

    <section>
      <title>Connect using password.</title>
      <content>
        <para>Following examples show how to connect using username and password combination.</para>
        <codeExample>
            <listItem>
              <para>Try to connect to the host within 30 seconds.</para>
              <code language="cs">
                var connectionInfo = new PasswordConnectionInfo("host", "username", "password");
                connectionInfo.Timeout = TimeSpan.FromSeconds(30);
                using (var client = new SshClient(connectionInfo))
                {
                client.Connect();
                client.Disconnect();
                }
              </code>
            </listItem>
          </list>
        </codeExample>
      </content>
    </section>

    
      <relatedTopics>
        <codeEntityReference>T:Renci.SshClient.ConnectionInfo</codeEntityReference>
        <codeEntityReference>T:Renci.SshClient.PrivateKeyConnectionInfo</codeEntityReference>
        <codeEntityReference>T:Renci.SshClient.PasswordConnectionInfo</codeEntityReference>
        <codeEntityReference>T:Renci.SshClient.SshClient</codeEntityReference>
        <codeEntityReference>M:Renci.SshClient.SshBaseClient.Connect()</codeEntityReference>
      </relatedTopics>
  </developerOrientationDocument>
</topic>