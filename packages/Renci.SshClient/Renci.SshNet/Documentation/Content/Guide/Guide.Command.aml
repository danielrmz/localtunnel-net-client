<?xml version="1.0" encoding="utf-8"?>
<topic id="2337d96d-7638-438e-b980-96e87b807265" revisionNumber="1">
  <developerReferenceWithSyntaxDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
      <title>Command execution</title>
      <content>
        All commands executed using <codeEntityReference>T:Renci.SshClient.SshCommand</codeEntityReference> object.
        <para>See examples below:</para>
        <codeExample>
          <list class="ordered">
            <listItem>
              <para>Execute single comamnd and display result</para>
              <code language="cs">
                using (var client = new SshClient("host", "username", "password"))
                {
                  client.Connect();
				  var cmd = client.RunCommand("ls -l");
 				  Console.WriteLine(cmd.Result);
                  client.Disconnect();
                }
              </code>
            </listItem>
            <listItem>
              <para>Create command object then execute it</para>
              <code language="cs">
                using (var client = new SshClient("host", "username", "password"))
                {
                  client.Connect();
                  var cmd = client.CreateCommand("date");
                  var result cmd.Execute();
 				  Console.WriteLine(result);
                  client.Disconnect();
                }
              </code>
            </listItem>
            <listItem>
              <para>Create command object then use it to execute multiple times</para>
              <code language="cs">
                using (var client = new SshClient("host", "username", "password"))
                {
                  client.Connect();
                  var cmd = client.CreateCommand("date");
                  cmd.Execute();
                  Console.WriteLine(cmd.Result);
                  cmd.Execute("ls -l");
 				  Console.WriteLine(cmd.Result);
                  client.Disconnect();
                }
              </code>
            </listItem>
          </list>
        </codeExample>
      </content>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerReferenceWithSyntaxDocument>
</topic>